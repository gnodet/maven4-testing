name: Maven 4 Compatibility Testing

permissions:
  contents: read
  issues: write    # Add this to allow creating issues

on:
  workflow_dispatch:
    inputs:
      maven_version:
        description: 'Maven 4 version to test'
        required: true
        default: '4.0.0-rc-1'
      chunk_number:
        description: 'Chunk number to test (or ALL for all chunks)'
        required: true
        default: 'ALL'

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Load chunk configuration
        id: set-matrix
        run: |
          if [[ "${{ github.event.inputs.chunk_number }}" == "ALL" ]]; then
            echo "matrix=$(jq -c . maven4-chunks/summary.json)" >> $GITHUB_OUTPUT
          else
            echo "matrix=$(jq -c . "maven4-chunks/chunk-${{ github.event.inputs.chunk_number }}.json")" >> $GITHUB_OUTPUT
          fi

  test-maven4:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 10
      matrix: ${{fromJson(needs.prepare.outputs.matrix)}}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: apache/${{ matrix.repository }}
          
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Download and Install Maven 4
        run: |
          mkdir -p ~/.m2
          wget https://archive.apache.org/dist/maven/maven-4/${{ github.event.inputs.maven_version }}/binaries/apache-maven-${{ github.event.inputs.maven_version }}-bin.tar.gz \
            || wget https://dlcdn.apache.org/maven/maven-4/${{ github.event.inputs.maven_version }}/binaries/apache-maven-${{ github.event.inputs.maven_version }}-bin.tar.gz
          tar xzf apache-maven-${{ github.event.inputs.maven_version }}-bin.tar.gz
          echo "M2_HOME=$GITHUB_WORKSPACE/apache-maven-${{ github.event.inputs.maven_version }}" >> $GITHUB_ENV
          echo "$GITHUB_WORKSPACE/apache-maven-${{ github.event.inputs.maven_version }}/bin" >> $GITHUB_PATH
          # Create minimal settings.xml to avoid snapshot resolution
          echo '<settings><profiles><profile><id>no-snapshots</id><repositories><repository><id>central</id><url>https://repo.maven.apache.org/maven2</url><snapshots><enabled>false</enabled></snapshots></repository></repositories></profile></profiles><activeProfiles><activeProfile>no-snapshots</activeProfile></activeProfiles></settings>' > ~/.m2/settings.xml

      - name: Build and Report
        uses: actions/github-script@v7
        with:
          script: |
            const { execSync } = require('child_process');
            
            // Run Maven build and capture output
            let buildSuccess = false;
            let mavenOutput = '';
            try {
              execSync('mvn -version > maven_version.txt');
              const versionInfo = execSync('cat maven_version.txt').toString();
              
              console.log('Running Maven build...');
              execSync('mvn -V -B clean package -DskipTests', { stdio: 'inherit' });
              buildSuccess = true;
              mavenOutput = versionInfo;
            } catch (error) {
              buildSuccess = false;
              mavenOutput = execSync('cat maven_version.txt').toString();
            }
            
            console.log('Build success:', buildSuccess);
            
            const status = buildSuccess ? '✅ Success' : '❌ Failed';
            const repo = '${{ matrix.repository }}';
            const mavenVersion = '${{ github.event.inputs.maven_version }}';
            const issueTitle = `Maven 4 Test Results: ${repo} (${mavenVersion})`;
            
            // Search for existing issue
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'all',
              labels: 'maven4-testing'
            });
            
            const existingIssue = issues.data.find(issue => issue.title === issueTitle);
            
            const body = `
              # Maven 4 Compatibility Test Report
              
              - **Repository**: ${repo}
              - **Status**: ${status}
              - **Maven Version**: ${mavenVersion}
              - **Test Date**: ${new Date().toISOString()}
              - **Chunk**: ${{ github.event.inputs.chunk_number }}
              
              <details>
              <summary>Maven Version Info</summary>
              
              \`\`\`
              ${mavenOutput}
              \`\`\`
              </details>

              ${!buildSuccess ? '<details><summary>Build Error Details</summary>\n\nFailed to build with Maven 4\n</details>' : ''}
            `;

            if (existingIssue) {
              // Update existing issue
              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: existingIssue.number,
                body: body,
                state: 'open',
                labels: ['maven4-testing', buildSuccess ? 'success' : 'failed']
              });
            } else {
              // Create new issue
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: issueTitle,
                body: body,
                labels: ['maven4-testing', buildSuccess ? 'success' : 'failed']
              });
            }